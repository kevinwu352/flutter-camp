三种构建模式
flutter run // 能启动模拟器，应该就是 F5
flutter run --profile
flutter build ios --release // 发布的时候用这个，打出 release 的 App.framework 和 Flutter.framework，再用 xcode archive 上传
flutter build ipa // 直接编译成 ipa，然后用 Apple Transport App 去上传
flutter build ipa --export-method enterprise // 导出企业版

开启布局边框
import 'package:flutter/rendering.dart';
void main() {
  debugPaintSizeEnabled = true;
  runApp(const MyApp());
}

注意这个样式的用法
final iconList = DefaultTextStyle.merge(
  style: descTextStyle,
  child: ,
);

可以用来生成固定数量的子视图
List<int>.generate(10, (i) => i * i)

一个看不见，占位0的视图
SizedBox.shrink()

文档说：推荐把 Scaffold 的子用 SafeArea 包起来




支持的字体类型
OpenType font collections: .ttc
TrueType fonts: .ttf
OpenType fonts: .otf


系统定义的回调 ValueChanged
final ValueChanged<bool> onChanged;


看看这个接口的定义，带默认实现的，实现它的类只需要实现一个方法即可
abstract interface class Comparable<T> {
  int compareTo(T other);
  static int compare(Comparable a, Comparable b) => a.compareTo(b);
}

================================================================================


CarouselView
Flow 能做很炫那种，弹出一堆按钮的按钮


LayoutBuilder 可以根据父传过来的尺寸决定显示两列还是一列


IndexedStack 同一时间只显示一个控件的 Stack
Stack 前后重叠
Positioned 只能用于 Stack 中




RotatedBox 旋转后，layout 也旋转了
Transform.rotate 旋转后，占的位置还是原来的。比如一个宽盒子竖起来，占位还是很宽的

FractionalTranslation 按照子的百分比进行偏移


BackdropFilter 用来做高斯模糊，视频里说效果不是加到它的 child 上的，而是它背后
BackdropFilter(
  filter: ImageFilter.blur(sigmaX: 0.5, sigmaY: 0.5),
  child: Container(color: Colors.black.withValues(alpha: 0)),
)
用 Stack，然后把它盖在其它控件上面



ClipRRect 用于把子内容切圆角
ClipRRect(
  borderRadius: BorderRadius.circular(20),
  child: Image.asset(...)
)

class HeroWidget extends Stateless {
  build() {
    return Hero(
      tag: 'hero1'
      child: Text('abc')
    )
  }
}











Draggable / LongPressDraggable

