xcrun simctl list
open -a Simulator --args -CurrentDeviceUDID B064EFFA-5833-423F-8DB0-E1083EA4B76C

编译，检测语法是否正确
dart compile exe min.dart

能把其它目录删了，需要的时候再建
flutter create --platforms=android




dart pub get
dart pub upgrade [transmogrify]
dart pub outdated // 列出过时的包
dart create -t package <PACKAGE_NAME>




Swift 给可选添加扩展
  extension Optional where Wrapped == Bool {
      func orFalse() -> Bool {
          return self ?? false
      }
  }
  let x: Bool? = nil
  print(x.orFalse())

Dart 给可选添加扩展
  extension UnwrapOrFalse on bool? {
      bool orFalse() {
          return this ?? false;
      }
  }
  bool? x;
  print(x.orFalse());



typedef IntList = List<int>;

typedef ListMapper<X> = Map<X, List<X>>;
Map<String, List<String>> m1 = {}; // Verbose.
ListMapper<String> m2 = {};

typedef Compare<T> = int Function(T a, T b);
int sort(int a, int b) => a - b;
assert(sort is Compare<int>);




class Obj {
  Obj({required this.name, required this.age});
  final String name;
  final int age;
}
//
这个普通类，创建的时候虽然参数相同，但是不同的对象。所以，从数组里删的时候，删不掉
final list = [Obj(name: 'kim', age: 18), Obj(name: 'bob', age: 20)];
print(list); // 2 个
//
final obj = Obj(name: 'kim', age: 18);
list.remove(obj);
print(list); // 还是 2 个
//
结论：从数组中删除是用 == 来判断的，默认的 == 是 identical 逻辑。如果两个对象 == 为假，但 hashCode 相等，也删不了