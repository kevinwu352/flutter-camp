
Expando ???
Finalizer
Invocation

Random().nextInt(10); 0-10
Random().nextBool
Random().nextDouble 无参数，0.0-1.0

JsonCodec 这是类，内部使用 JsonEncoder / JsonDecoder
json 是 JsonCodec 的实例，有俩函数 jsonEncode = json.encode / jsonDecode = json.decode

DateTime 是时间，DateFormat 用来格式化，它属于 intl 包
国际化的时候指定显示格式 https://docs.flutter.dev/ui/accessibility-and-internationalization/internationalization#messages-with-dates

函数类型可选时，调用如下
  maybeFun?.call(1)

var it = obj.iterator;
while (it.moveNext()) {
  use(it.current);
}



double

isFinite
sign / isNegative

abs

toDouble / toInt
toString
toStringAsExponential(3) // 1.235e+5
toStringAsPrecision // 没搞懂这函数？
toStringAsFixed
  0 去掉小数位，也不会有小数点
  n 位数不足会补 0，四舍五入不管正负

ceil x 轴向右，所以 -1.1 => -1
floor x 轴向左，所以 -1.1 => -2
round 四舍五入，所以 -3.2 => -3 / -3.5 => -4
truncate 直接丢弃小数部分
上面四个返回值是 int，~ToDouble 返回值是 double

超过上限或下限，则返回上限或下限
num clamp(num lowerLimit, num upperLimit)

整除后的余数
double remainder(num other)


int

gcd 最大公约数

toRadixString(2) 转成几进制的字符串

toSigned / toUnsigned // 没搞懂这函数？
modInverse / modPow // 没搞懂这函数？


Iterable<E>

new
empty

Iterable.generate(10)
类型是 Iterable<dynamic>，内容是 0-9 的 int
不缓存，每次重新算
Iterable.generate(n, generator)) 等价于 const [0, ..., n-1].map(generator)

Iterable.withIterator
此 Iterable 的 iterator 被访问时，调用初始化里那参数，那参数每次返回一个新的 iterator


获取一个值

first / last 在空流上也会崩
用 firstOrNull / lastOrNull
single 空流或多元素流会崩
用 singleOrNull

byName
流里面是 Enum，通过 name 来找，找不到会崩
MyEnum.values.byName('xx')

asNameMap
流里面是 Enum，转换成 String:Enum 键值对
MyEnum.values.asNameMap()


indexed
前面是位置，后面是元素
final it1 = Iterable.generate(5, (i) => i * 2).indexed;
for (var (e, f) in it1) {
  print('$e $f');
}

nonNulls
将 Iterable<int?> 转化成 Iterable<int>

cast 将流转换成新流
比如流的类型是 List<Object>，但里面全是字符串，则可以如下转换
  list.cast<String>();
如果流里不止字符串，则会崩




